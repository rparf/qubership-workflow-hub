---
name: Docker build and publish
description: This action builds and publishes a Docker image to the GitHub Container Registry.
inputs:
    ref:
      description: "Tag or branch name to create release from"
      required: false
      default: main
    artifact-id:
      description: "Artifact ID to use"
      required: false
      default: ''
    context:
      description: "Docker build context. Can be `git` or `workflow`"
      required: false
      default: "git"
    dry-run:
      description: "Build but do not push image"
      required: false
      default: 'false'
    download-artifact:
      description: "Download the artifact before building the Docker image"
      required: false
      default: 'false'
    component:
      description: "JSON string describing components for building Docker images"
      required: false
      default: '[{"name": "default", "file": "./Dockerfile", "context": "."}]'
    platforms:
      description: "List of platforms on which the image must be built"
      default: "linux/amd64"
      required: false
    tags-override:
      description: "Override tags"
      default: ''
      required: false
runs:
  using: "composite"
  steps:
  - name: Checkout repository
    uses: actions/checkout@v4
    with:
      ref: ${{ inputs.ref }}
  
  - name: Debug info
    shell: bash
    run: |
      echo "artifact_id ${{ inputs.artifact-id }}"
      echo "version ${{ github.event.inputs.version }}"
      echo "ref ${{ inputs.ref }}"
      echo "GITHUB_REPOSITORY ${{ github.repository }}"
      echo "GITHUB_REF ${{ github.ref }}"
  
  - name: Download artifact
    if: ${{ inputs.download-artifact }}
    uses: actions/download-artifact@v4
    with:
      name: ${{ inputs.artifact-id }}
  
  - name: Set up QEMU
    uses: docker/setup-qemu-action@v3

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v3

  - name: Log in to GitHub Container Registry
    uses: docker/login-action@v2
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ secrets.GITHUB_TOKEN }}
  
  - name: Debug URL
    shell: bash
    run: |
      echo "URL  ghcr.io/${{ github.repository_owner }}/${{ inputs.artifact-id  || matrix.component.name }}"
      echo "URL  ghcr.io/${{ github.repository_owner }}/${{ inputs.artifact-id  || matrix.component.name }}"
  
  - name: Extract Docker metadata
    if: inputs.tags-override == ''
    id: meta
    uses: docker/metadata-action@v4
    with:
      context: ${{ inputs.context }}
      images: ghcr.io/${{ github.repository_owner }}/${{ inputs.artifact-id  || matrix.component.name }}          
      tags: |
        type=ref,event=branch
        type=semver,pattern={{version}}
        type=semver,pattern={{major}}.{{minor}}
        type=semver,pattern={{major}}

  - name: Prepeare tags
    if: inputs.tags-override != ''
    id: prepare-tags
    shell: bash
    run: 'echo tags=ghcr.io/${{ github.repository_owner }}/${{ inputs.artifact-id  || matrix.component.name }}:${{ inputs.tags-override }} >> $GITHUB_ENV'
    
  - name: Check Dockerfile existence
    shell: bash
    run: |
      ls -la
      echo "tags ${{ steps.meta.outputs.tags }}"
      echo "labels ${{ steps.meta.outputs.labels }}"
      echo "repository ${{ github.repository }}"

  - name: Build and push Docker image
    uses: docker/build-push-action@v4
    with:
      context: ${{ matrix.component.context }}
      file: ${{ matrix.component.file }}
      push: ${{ !inputs.dry-run }}
      tags: ${{ env.tags || steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      platforms: ${{ inputs.platforms }}
  